# other import statement are above
from fastapi import Body, Depends, APIRouter, HTTPException, status, Request
from typing import Annotated
from fastapi.security import OAuth2PasswordRequestForm
from api.v1.schemas.token import Token
from api.v1.schemas.user import CreateUser, UserInDB, User
from api.v1.services.auth import (
    get_current_active_user
)
from api.v1.services.scan import create_user
from api.v1.services.auth import get_access_token


router = APIRouter()


@router.post("/auth/signup", response_model=UserInDB)
async def signup(request: Request, payload: CreateUser = Body()):
    return await create_user(request.app.state.mongo, user=payload)


@router.post("/auth/token")
async def login_for_access_token(
    request: Request, form_data: Annotated[OAuth2PasswordRequestForm, Depends()]
) -> Token:
    return await get_access_token(request.app.state.mongo, form_data) 


@router.get("/users/me/", response_model=User)
async def read_users_me(
    current_user: Annotated[User, Depends(get_current_active_user)]
):
    return current_user
