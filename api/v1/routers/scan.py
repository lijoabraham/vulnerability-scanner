# v1/routers/endpoint_v1.py
from typing import Annotated
from fastapi import APIRouter, Depends, Request
from api.v1.services.scan import create_scan
from api.v1.services.auth import get_current_active_user
from api.v1.schemas.user import User
from api.v1.schemas.scan import ScanItem
from fastapi.responses import JSONResponse
from api.v1.services.scan import get_scan
from api.v1.services.limiter import limiter

router = APIRouter()

@router.get("/health/")
@limiter.limit("1/minute")
async def health(request:Request):
    request.app.state.logger.info("logging from the root logger")
    return {"version": "v1", "message": "This is version 1 of the endpoint", "settings": request.app.state.settings.dict()}

@router.get("/scans/{scan_id}")
async def get_scan_item(request:Request, scan_id: int, current_user: Annotated[User, Depends(get_current_active_user)]) -> JSONResponse:
    return await get_scan(request.app.state.mongo, scan_id)
    

@router.post("/scans/")
async def create_new_scan(request:Request, scan_data: ScanItem, current_user: Annotated[User, Depends(get_current_active_user)])-> JSONResponse:
    return await create_scan(request.app.state.mongo, scan_data)
