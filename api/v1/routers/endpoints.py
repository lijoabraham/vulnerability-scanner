# v1/routers/endpoint_v1.py
from functools import lru_cache
from typing import Annotated
import json
from sqlalchemy.orm import Session
from database.db import get_db
from fastapi import APIRouter, Depends
from settings import Settings
from api.v1.models.model import ScanItem
from database.models.scans import Scan
from fastapi.responses import JSONResponse

router = APIRouter()

@lru_cache
def get_settings():
    return Settings()


@router.get("/health/")
async def read_items(settings: Annotated[Settings, Depends(get_settings)]):
    return {"version": "v1", "message": "This is version 1 of the endpoint", "settings":settings}


@router.post("/scans/")
async def create_scan(scan_data: ScanItem, db: Session = Depends(get_db))-> JSONResponse:
    try:
        print(scan_data)
        db_scan = Scan(name=scan_data.name, info=json.dumps(scan_data.url))
        db.add(db_scan)
        db.commit()
        db.refresh(db_scan)
        return JSONResponse(content={"status": "success", "data": db_scan}, status_code=200) 
    except Exception as e:
        return JSONResponse(content={"status": "error", "message": str(e)}, status_code=500)
    finally:
        db.close()
