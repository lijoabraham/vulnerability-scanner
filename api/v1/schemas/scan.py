from pydantic import BaseModel, Field
from typing import Optional


class ScanBase(BaseModel):
    name: Optional[str]
    scan_urls: Optional[list[str]]


class ScanCreate(ScanBase):
    pass


class ScanItem(ScanBase):

    class Config:
        from_attributes = True

class ScanCreateItem(ScanBase):
    scan_id: int
    status: int
    
    class Config:
        from_attributes = True

class ScanItemInDB(ScanBase):
    id: str = Field(alias="id") 
    scan_id: int
    status: int

    class Config:
        from_attributes = True


class ScanLogBase(BaseModel):
    log_message: Optional[str]


class ScanLogCreate(ScanLogBase):
    pass


class ScanLogItem(ScanLogBase):
    scan_id: int

    class Config:
        from_attributes = True


class ScanStatusBase(BaseModel):
    name: Optional[str]


class ScanStatusCreate(ScanStatusBase):
    pass


class ScanStatusItem(ScanStatusBase):

    class Config:
        from_attributes = True
