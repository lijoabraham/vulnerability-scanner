
from api.v1.routers import auth, scan
from fastapi import FastAPI, Request
from settings import get_settings
from api.v1.db.async_mongo import get_mongo_database
from api.v1.services.logger import setup_logging, logger
from contextlib import asynccontextmanager
import time 


@asynccontextmanager
async def lifespan(app: FastAPI):
    settings = await get_settings()
    app.state.settings = settings
    mongo_session = await get_mongo_database(settings)
    app.state.mongo = mongo_session
    await setup_logging()
    app.state.logger = logger
    yield

app = FastAPI(lifespan=lifespan)

@app.middleware("http")
async def add_process_time_header(request: Request, call_next):
    start_time = time.time()
    response = await call_next(request)
    process_time = time.time() - start_time
    response.headers["X-Process-Time"] = str(process_time)
    return response

app.include_router(scan.router, prefix="/v1")
app.include_router(auth.router, prefix="/v1")
