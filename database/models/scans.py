from sqlalchemy import Column, Integer, String, Text, TIMESTAMP, JSON, ForeignKey, func
from sqlalchemy.orm import relationship
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

class Scan(Base):
    __tablename__ = 'scan'

    id = Column(Integer, primary_key=True)
    name = Column(String(100))
    info = Column(JSON)
    status = Column(Integer, ForeignKey('scan_status.id'))
    time_added = Column(TIMESTAMP, server_default=func.now())
    time_modified = Column(TIMESTAMP, server_default=func.now(), onupdate=func.now())

    scan_logs = relationship("ScanLog", back_populates="scan")

class ScanLog(Base):
    __tablename__ = 'scan_log'

    id = Column(Integer, primary_key=True)
    scan_id = Column(Integer, ForeignKey('scan.id'))
    scan_status = Column(Integer, ForeignKey('scan_status.id'))
    log_message = Column(Text)
    time_added = Column(TIMESTAMP, server_default=func.now())
    time_modified = Column(TIMESTAMP, server_default=func.now(), onupdate=func.now())

    scan = relationship("Scan", back_populates="scan_logs")

class ScanStatus(Base):
    __tablename__ = 'scan_status'

    id = Column(Integer, primary_key=True)
    name = Column(String(50), unique=True)
    time_added = Column(TIMESTAMP, server_default=func.now())
    time_modified = Column(TIMESTAMP, server_default=func.now(), onupdate=func.now())
